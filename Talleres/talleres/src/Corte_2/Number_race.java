/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Corte_2;

import java.util.ArrayList;
import java.util.Random;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author juanc
 */
public class Number_race extends javax.swing.JFrame {

    /**
     * Creates new form Number_race
     */
    int Num_jugadores=0,nivelSeleccionado=0,jugador=1,sumaDados = 0,cont=0,acumuladorTotalPares=0,suma_TotalDados=0;
    String numeroJugadores;

    ArrayList<String> jugadoresConfig = new ArrayList<String>();
    ArrayList<String> jugadores = new ArrayList<String>();
    ArrayList<Integer>  posicionesAvanzadas = new ArrayList<Integer>();
    ArrayList<Integer>  acumuladorPares = new ArrayList<Integer>();
    ArrayList<Integer>  acumuladorChocado = new ArrayList<Integer>();


    public Number_race() {
        initComponents();
        //No permitimos cambiar tama√±o
        setResizable(false);
        //Cambiar el icono a un frame
        setIconImage(new ImageIcon(getClass().getResource("car.png")).getImage());
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpanelPrincipal = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jpanel_configZone = new javax.swing.JPanel();
        cmb_numberPlayers = new javax.swing.JComboBox<>();
        cmb_Level = new javax.swing.JComboBox<>();
        btn_startGame = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jpanelPairs = new javax.swing.JPanel();
        lblPairs = new javax.swing.JLabel();
        jpanel_scoresZone = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbl_turnPlayer = new javax.swing.JLabel();
        lbl_advancedPositions = new javax.swing.JLabel();
        lbl_missingPositions = new javax.swing.JLabel();
        lbl_returns = new javax.swing.JLabel();
        jpanelWinner = new javax.swing.JPanel();
        lblWinner = new javax.swing.JLabel();
        jpanel_playZone2 = new javax.swing.JPanel();
        btn_playPlayerNo = new javax.swing.JButton();
        lblD1 = new javax.swing.JLabel();
        lblD2 = new javax.swing.JLabel();
        lbl_PlayZone = new javax.swing.JTextField();
        btn_configParams = new javax.swing.JButton();
        btn_aboutOf = new javax.swing.JButton();
        btn_tryAgain = new javax.swing.JButton();
        btn_Help = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Number race");

        jpanelPrincipal.setBackground(new java.awt.Color(102, 255, 102));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Corte_2/banner.png"))); // NOI18N

        jpanel_configZone.setBackground(new java.awt.Color(102, 255, 102));
        jpanel_configZone.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2), "Config zone", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Semibold", 1, 14))); // NOI18N

        cmb_numberPlayers.setEnabled(false);

        cmb_Level.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Basic [50]", "Intermediate[100]", "Advanced[200]" }));
        cmb_Level.setEnabled(false);

        btn_startGame.setBackground(new java.awt.Color(204, 0, 0));
        btn_startGame.setFont(new java.awt.Font("Franklin Gothic Book", 1, 12)); // NOI18N
        btn_startGame.setForeground(new java.awt.Color(255, 255, 255));
        btn_startGame.setText("Start game");
        btn_startGame.setEnabled(false);
        btn_startGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_startGameActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Level:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Number of players:");

        javax.swing.GroupLayout jpanel_configZoneLayout = new javax.swing.GroupLayout(jpanel_configZone);
        jpanel_configZone.setLayout(jpanel_configZoneLayout);
        jpanel_configZoneLayout.setHorizontalGroup(
            jpanel_configZoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanel_configZoneLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jpanel_configZoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(btn_startGame, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_Level, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_numberPlayers, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jpanel_configZoneLayout.setVerticalGroup(
            jpanel_configZoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanel_configZoneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmb_numberPlayers, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(4, 4, 4)
                .addComponent(cmb_Level, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btn_startGame, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jpanelPairs.setBackground(new java.awt.Color(102, 255, 102));
        jpanelPairs.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2), "Pairs", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Semibold", 1, 14))); // NOI18N

        lblPairs.setFont(new java.awt.Font("Tahoma", 1, 80)); // NOI18N
        lblPairs.setForeground(new java.awt.Color(255, 51, 51));
        lblPairs.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPairs.setText("0");

        javax.swing.GroupLayout jpanelPairsLayout = new javax.swing.GroupLayout(jpanelPairs);
        jpanelPairs.setLayout(jpanelPairsLayout);
        jpanelPairsLayout.setHorizontalGroup(
            jpanelPairsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 224, Short.MAX_VALUE)
            .addGroup(jpanelPairsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jpanelPairsLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lblPairs, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jpanelPairsLayout.setVerticalGroup(
            jpanelPairsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jpanelPairsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jpanelPairsLayout.createSequentialGroup()
                    .addGap(0, 40, Short.MAX_VALUE)
                    .addComponent(lblPairs, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 41, Short.MAX_VALUE)))
        );

        jpanel_scoresZone.setBackground(new java.awt.Color(102, 255, 102));
        jpanel_scoresZone.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2), "Scores zone", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Semibold", 1, 14))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Turn player:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Advanced positions:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Missing positions:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Returns:");

        lbl_turnPlayer.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbl_turnPlayer.setForeground(new java.awt.Color(0, 102, 0));
        lbl_turnPlayer.setText("#");

        lbl_advancedPositions.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbl_advancedPositions.setForeground(new java.awt.Color(0, 102, 0));
        lbl_advancedPositions.setText("#");

        lbl_missingPositions.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbl_missingPositions.setForeground(new java.awt.Color(0, 102, 0));
        lbl_missingPositions.setText("#");

        lbl_returns.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbl_returns.setForeground(new java.awt.Color(0, 102, 0));
        lbl_returns.setText("#");

        javax.swing.GroupLayout jpanel_scoresZoneLayout = new javax.swing.GroupLayout(jpanel_scoresZone);
        jpanel_scoresZone.setLayout(jpanel_scoresZoneLayout);
        jpanel_scoresZoneLayout.setHorizontalGroup(
            jpanel_scoresZoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanel_scoresZoneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpanel_scoresZoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpanel_scoresZoneLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbl_returns))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpanel_scoresZoneLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbl_missingPositions))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpanel_scoresZoneLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addComponent(lbl_advancedPositions))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpanel_scoresZoneLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbl_turnPlayer)))
                .addGap(38, 38, 38))
        );
        jpanel_scoresZoneLayout.setVerticalGroup(
            jpanel_scoresZoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanel_scoresZoneLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jpanel_scoresZoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lbl_turnPlayer))
                .addGap(11, 11, 11)
                .addGroup(jpanel_scoresZoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lbl_advancedPositions))
                .addGap(11, 11, 11)
                .addGroup(jpanel_scoresZoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lbl_missingPositions))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpanel_scoresZoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lbl_returns))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpanelWinner.setBackground(new java.awt.Color(102, 255, 102));
        jpanelWinner.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2), "Winner", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Semibold", 1, 14))); // NOI18N

        lblWinner.setFont(new java.awt.Font("Tahoma", 1, 80)); // NOI18N
        lblWinner.setForeground(new java.awt.Color(0, 153, 153));
        lblWinner.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblWinner.setText("?");

        javax.swing.GroupLayout jpanelWinnerLayout = new javax.swing.GroupLayout(jpanelWinner);
        jpanelWinner.setLayout(jpanelWinnerLayout);
        jpanelWinnerLayout.setHorizontalGroup(
            jpanelWinnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 224, Short.MAX_VALUE)
            .addGroup(jpanelWinnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jpanelWinnerLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lblWinner, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jpanelWinnerLayout.setVerticalGroup(
            jpanelWinnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jpanelWinnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jpanelWinnerLayout.createSequentialGroup()
                    .addGap(0, 40, Short.MAX_VALUE)
                    .addComponent(lblWinner, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 41, Short.MAX_VALUE)))
        );

        jpanel_playZone2.setBackground(new java.awt.Color(102, 255, 102));
        jpanel_playZone2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2), "Play zone", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Semibold", 1, 14))); // NOI18N

        btn_playPlayerNo.setBackground(new java.awt.Color(0, 102, 0));
        btn_playPlayerNo.setFont(new java.awt.Font("Franklin Gothic Book", 1, 12)); // NOI18N
        btn_playPlayerNo.setForeground(new java.awt.Color(255, 255, 255));
        btn_playPlayerNo.setText("Play - Player #");
        btn_playPlayerNo.setEnabled(false);
        btn_playPlayerNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_playPlayerNoActionPerformed(evt);
            }
        });

        lblD1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        lblD1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblD1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagesCorte2/question.png"))); // NOI18N

        lblD2.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        lblD2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblD2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagesCorte2/question.png"))); // NOI18N

        lbl_PlayZone.setEditable(false);
        lbl_PlayZone.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        lbl_PlayZone.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lbl_PlayZone.setText("             ");

        javax.swing.GroupLayout jpanel_playZone2Layout = new javax.swing.GroupLayout(jpanel_playZone2);
        jpanel_playZone2.setLayout(jpanel_playZone2Layout);
        jpanel_playZone2Layout.setHorizontalGroup(
            jpanel_playZone2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanel_playZone2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jpanel_playZone2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpanel_playZone2Layout.createSequentialGroup()
                        .addComponent(lblD1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblD2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_playPlayerNo, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpanel_playZone2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_PlayZone, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91))
        );
        jpanel_playZone2Layout.setVerticalGroup(
            jpanel_playZone2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpanel_playZone2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_PlayZone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpanel_playZone2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblD1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblD2, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_playPlayerNo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );

        btn_configParams.setBackground(new java.awt.Color(255, 102, 0));
        btn_configParams.setFont(new java.awt.Font("Franklin Gothic Book", 1, 12)); // NOI18N
        btn_configParams.setForeground(new java.awt.Color(255, 255, 255));
        btn_configParams.setText("Config params");
        btn_configParams.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_configParamsActionPerformed(evt);
            }
        });

        btn_aboutOf.setBackground(new java.awt.Color(0, 0, 102));
        btn_aboutOf.setFont(new java.awt.Font("Franklin Gothic Book", 1, 12)); // NOI18N
        btn_aboutOf.setForeground(new java.awt.Color(255, 255, 255));
        btn_aboutOf.setText("About of ");
        btn_aboutOf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_aboutOfActionPerformed(evt);
            }
        });

        btn_tryAgain.setBackground(new java.awt.Color(204, 0, 0));
        btn_tryAgain.setFont(new java.awt.Font("Franklin Gothic Book", 1, 12)); // NOI18N
        btn_tryAgain.setForeground(new java.awt.Color(255, 255, 255));
        btn_tryAgain.setText("Try again");
        btn_tryAgain.setEnabled(false);
        btn_tryAgain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_tryAgainActionPerformed(evt);
            }
        });

        btn_Help.setBackground(new java.awt.Color(51, 255, 204));
        btn_Help.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagesCorte2/help.png"))); // NOI18N
        btn_Help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_HelpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpanelPrincipalLayout = new javax.swing.GroupLayout(jpanelPrincipal);
        jpanelPrincipal.setLayout(jpanelPrincipalLayout);
        jpanelPrincipalLayout.setHorizontalGroup(
            jpanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelPrincipalLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jpanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpanelPrincipalLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(139, 139, 139)
                        .addComponent(btn_Help, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpanelPrincipalLayout.createSequentialGroup()
                        .addGroup(jpanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jpanel_configZone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jpanel_playZone2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jpanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jpanelPairs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jpanel_scoresZone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jpanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jpanelWinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_aboutOf, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_tryAgain, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_configParams, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jpanelPrincipalLayout.setVerticalGroup(
            jpanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jpanelPrincipalLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(btn_Help, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jpanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpanelPrincipalLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addGroup(jpanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jpanel_scoresZone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jpanel_configZone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(34, 34, 34))
                    .addGroup(jpanelPrincipalLayout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(btn_configParams, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_tryAgain, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_aboutOf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jpanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jpanel_playZone2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpanelPairs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpanelWinner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(48, 48, 48))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpanelPrincipal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_startGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_startGameActionPerformed
        //VALIDAMOS LA CANTIDAD DE JUGADORES HA SIDO SELECCIONADO CORRECTAMENTE
        numeroJugadores= cmb_numberPlayers.getSelectedItem().toString();
        System.out.println(numeroJugadores);
        if(numeroJugadores.equals("Seleccione una opci√≥n")){
           JOptionPane.showMessageDialog(null, "Seleccione la cantidad de jugadores.");
        }else if(numeroJugadores.equals("1")){
           JOptionPane.showMessageDialog(null, "Cantidad de jugadores no permitida. Debe ser mayor que 1.");        
        }else{
            
        for (int i = 0; i <=Integer.parseInt(numeroJugadores); i++) {
            //A√±adimos  jugadores al ARRAYLIST seleccionado por el usuario 
            jugadores.add(Integer.toString(i));
            //Generamos datos de acuerdo a la cantidad de JUGADORES para ARRAYLIST Acumulador de Pares y Chocado
            acumuladorPares.add(0); 
            acumuladorChocado.add(0);
        }
            System.out.println(jugadores);
            System.out.println(posicionesAvanzadas);
            System.out.println(acumuladorChocado);
            System.out.println(acumuladorPares);

            //Botones y jComboBox a editables
            btn_tryAgain.setEnabled(true);
            btn_aboutOf.setEnabled(true);
            btn_playPlayerNo.setEnabled(true);

            //Botones y jComboBox no editables. 
            cmb_Level.setEnabled(false);
            cmb_numberPlayers.setEnabled(false);
            btn_startGame.setEnabled(false);
            
        

            btn_playPlayerNo.setText("Play - Player 1");
            posicionesAvanzadas.add(0);
  
            //Almacenamos el nivel seleccionado en una variable nivel
            int nivel = cmb_Level.getSelectedIndex();
            if(nivel==0){ //basic
                nivelSeleccionado=50;
            }else if(nivel==1){ //intermediate
                nivelSeleccionado=100;
            }else{ //advanced
                nivelSeleccionado=200;
            }
        }
           
        //System.out.println("Jugadores: "+numeroJugadores);
        //System.out.println("Nivel: "+nivelSeleccionado);
       
    }//GEN-LAST:event_btn_startGameActionPerformed

    private void btn_configParamsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_configParamsActionPerformed
        //INICIAR VARIABLES EN TIPO ENTERO (0) Y STRING ("")       
        Num_jugadores=0;
        nivelSeleccionado=0;
        jugador=1;
        sumaDados = 0;
        cont=0;
        acumuladorTotalPares=0;
        suma_TotalDados=0;
        numeroJugadores="";   
        
        //LIMPIAR EL JCOMBOBOX
        cmb_numberPlayers.removeAllItems();
        //LIMPIAR TODOS LOS ARRAYLIST
        jugadoresConfig.clear();
       jugadores.clear();
        posicionesAvanzadas.clear();
        acumuladorPares.clear();
        acumuladorChocado.clear();

        //HABILITAR Y DESABILITAR BOTONES
   
        lbl_turnPlayer.setText("#"); //Muestra (Jugador que lanz√≥ los dados)
        lbl_advancedPositions.setText("#"); // Posiciones que ha avanzado el Jugador que lanz√≥ los dados
        lbl_missingPositions.setText("#"); // Posiciones que faltan a Meta  el Jugador que lanz√≥ los dados
        lbl_returns.setText("#");
        lblPairs.setText("0");
        lblWinner.setText("?");
        lbl_PlayZone.setText("");
        
        //MOSTRAR IMAGEN question EN VES DE DADOS
        lblD1.setIcon(new ImageIcon(getClass().getResource("/imagesCorte2/question.png")));
        lblD2.setIcon(new ImageIcon(getClass().getResource("/imagesCorte2/question.png")));

        
        String[] options = {"Si", "No"};
        boolean no=false;
        do{   
            int boton = JOptionPane.showOptionDialog(null, "Desea agregar el n√∫mero de jugadores que desean jugar?", "Config Params", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[1]);

            switch(boton){
                case 0: //SI
                    int respSi = JOptionPane.showConfirmDialog(null, "¬øEsta seguro que desea agregar el n√∫mero de jugadores que desean jugar?", "Alerta!", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);

                    if(respSi==0){
                        boolean n_bandera=false;
                        do{
                            try{
                                //(n_bandera2) Validar numero de JUGADORES ingresado por el usuario sea mayor o igual a 2
                                boolean n_bandera2=false;
                                do{
                                    Num_jugadores=Integer.parseInt(javax.swing.JOptionPane.showInputDialog("Introduce la cantidad de jugadores: "));
                                    n_bandera=true;
                                    no=true;  
                                    if(Num_jugadores<2){
                                        n_bandera2=false;
                                    }else{
                                        n_bandera2=true;
                                        //PERMITE A√ëADIR DATOS AL ARRAYLIST
                                        jugadoresConfig.add("Seleccione una opci√≥n");//0
                                        for (int i = 1; i <=Num_jugadores ; i++) {
                                            //A√±adimos  jugadores al ARRAYLIST seleccionado por el usuario 
                                            jugadoresConfig.add(Integer.toString(i));
                                        }
                                        //PERMITE A√ëADIR DATOS AL JCOMBOBOX
                                        for (String jugador : jugadoresConfig) {
                                            cmb_numberPlayers.addItem(jugador);  
                                        }
                                        btn_startGame.setEnabled(true);
                                        cmb_numberPlayers.setEnabled(true);
                                        cmb_Level.setEnabled(true);
                                        btn_configParams.setEnabled(false);
                                    }
                                }while(!n_bandera2);
                            } catch(NumberFormatException e){
                                JOptionPane.showMessageDialog(null, "Solo se permiten n√∫meros.");
                                n_bandera=false;
                                no=false;
                            }                        
                        }while(!n_bandera);                    
                    }else{
                        no=true;
                        btn_startGame.setEnabled(true);
                        cmb_numberPlayers.setEnabled(true);
                        cmb_Level.setEnabled(true);
                        btn_configParams.setEnabled(false);
                        jugadores.add("Seleccione una opci√≥n");//0
                        jugadores.add("1");//1
                        jugadores.add("2");//2
                        jugadores.add("3");//3
                        for (String jugador : jugadores) {
                            cmb_numberPlayers.addItem(jugador);  
                        }
                    }
                    break;
                case 1: //NO
                    
                    int respNo = JOptionPane.showConfirmDialog(null, "¬øEst√° seguro que NO desea agregar el n√∫mero de jugadores que desean jugar?", "Alerta!", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);
                
                    if(respNo==0){
                        no=true;
                        btn_startGame.setEnabled(true);
                        cmb_numberPlayers.setEnabled(true);
                        cmb_Level.setEnabled(true);
                        btn_configParams.setEnabled(false);
                        jugadores.add("Seleccione una opci√≥n");//0
                        jugadores.add("1");//1
                        jugadores.add("2");//2
                        jugadores.add("3");//3
                        for (String jugador : jugadores) {
                            cmb_numberPlayers.addItem(jugador);  
                        }
                    }else{
                        no=false;
                    }
                    break;

            }
        }while(!no);       
    
    }//GEN-LAST:event_btn_configParamsActionPerformed

    private void btn_aboutOfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_aboutOfActionPerformed
        JOptionPane.showMessageDialog(null, "\nAUTORES:\n"+
        "JUAN CARLOS ASTAIZA ORDO√ëEZ\n" +
        "\n" +
        "PRESENTADO A:	\n" +
        "JOAN CARLOS AYALA BENAVIDES\n" +
        "\n" +
        "		\n" +
        "UNIVERSIDAD CENTRO DE ESTUDIOS MARIA GORETTI (CESMAG)\n" +
        "PROGRAMACI√ìN EN ENTORNOS GR√ÅFICOS\n" +
        "PASTO - NARI√ëO\n" +
        "2020", "About of", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btn_aboutOfActionPerformed

    private void btn_tryAgainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_tryAgainActionPerformed
        //INICIAR VARIABLES EN TIPO ENTERO (0) Y STRING ("")       
        Num_jugadores=0;
        nivelSeleccionado=0;
        jugador=1;
        sumaDados = 0;
        cont=0;
        acumuladorTotalPares=0;
        suma_TotalDados=0;
        numeroJugadores="";     

        //LIMPIAR TODOS LOS ARRAYLIST   
        jugadores.clear();
        posicionesAvanzadas.clear();
        acumuladorPares.clear();
        acumuladorChocado.clear();

        //HABILITAR Y DESABILITAR BOTONES
        btn_startGame.setEnabled(true);
        cmb_numberPlayers.setEnabled(false);
        cmb_Level.setEnabled(false);
        btn_configParams.setEnabled(false);
        btn_playPlayerNo.setEnabled(false);
    
        lbl_turnPlayer.setText("#"); //Muestra (Jugador que lanz√≥ los dados)
        lbl_advancedPositions.setText("#"); // Posiciones que ha avanzado el Jugador que lanz√≥ los dados
        lbl_missingPositions.setText("#"); // Posiciones que faltan a Meta  el Jugador que lanz√≥ los dados
        lbl_returns.setText("#");
        lblPairs.setText("0");
        lblWinner.setText("?");
        lbl_PlayZone.setText("");
        
        //MOSTRAR IMAGEN question EN VES DE DADOS
        lblD1.setIcon(new ImageIcon(getClass().getResource("/imagesCorte2/question.png")));
        lblD2.setIcon(new ImageIcon(getClass().getResource("/imagesCorte2/question.png")));

        
    }//GEN-LAST:event_btn_tryAgainActionPerformed

    private void btn_playPlayerNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_playPlayerNoActionPerformed
        lbl_PlayZone.setText("");
        cont++;
        jugador++;
        
        btn_playPlayerNo.setText("Play - Player "+jugador); //Turno del jugador que lanza dados.(Bot√≥n)
        
        //Numeros aleatorios
        Random dado = new Random();
        int d1 = 0, d2 = 0;
        
        d1 = (int)(dado.nextDouble()* 6 + 1);
        d2 = (int)(dado.nextDouble()* 6 + 1);        
        
        sumaDados = d1 + d2;    //Calcula datos que ha sacado el jugador    
     
        //Mostrar Datos
        for (int i = 1; i<=6; i++) {
            if(i==d1){
                lblD1.setIcon(new ImageIcon(getClass().getResource("/imagesCorte2/"+i+".png")));
            }
            if(i==d2){
                lblD2.setIcon(new ImageIcon(getClass().getResource("/imagesCorte2/"+i+".png")));
            }             
        }
        
        //validar cuando el jugador es 1, el jugador a mostrar es ultimo jugador en lbl_turnPlayer     
        String jugadorAnterior=Integer.toString(jugador-1);
        if(jugador==1){
            jugadorAnterior=numeroJugadores;
        }
       int Jactual=Integer.parseInt(jugadorAnterior)-1;
        
        if(cont<=Integer.parseInt(numeroJugadores)){
            
            if(d1==1 && d2==1){
                lbl_PlayZone.setText("PAR (1,1)");
                sumaDados=21;
                JOptionPane.showMessageDialog(null, "Usted JUGADOR "+jugadorAnterior+" sac√≥ par  de unos (1,1) podr√° avanzar\n" +
                    "simult√°neamente Veintiuno  (21) posiciones.");         
            }else if(d1==d2){
                lbl_PlayZone.setText("PAR ("+d1+","+d2+")");
                acumuladorTotalPares=acumuladorPares.get(Integer.parseInt(jugadorAnterior))+1;
                acumuladorPares.set(Integer.parseInt(jugadorAnterior), acumuladorTotalPares); 
                JOptionPane.showMessageDialog(null, "Usted JUGADOR "+jugadorAnterior+" sac√≥ par.");   
            }
         
            if(cont>1){
                /*Si un jugador llega a la posici√≥n donde hay otro jugador [choque *], el que estaba
                antes, regresa a salida, es decir inicia nuevamente, y el que lleg√≥, queda esa posici√≥n. */
                if(posicionesAvanzadas.get(Integer.parseInt(jugadorAnterior)-1)==sumaDados){
                    System.out.println("[choque *]");
                    JOptionPane.showMessageDialog(null, "Usted JUGADOR "+jugadorAnterior+" ACUMUL√ì:"+sumaDados+" y ha hecho un [choque *] al JUGADOR "+Jactual+" que ACUMUL√ì: "+posicionesAvanzadas.get(Integer.parseInt(jugadorAnterior)-1));          
                    posicionesAvanzadas.set(Integer.parseInt(jugadorAnterior)-1, 0);
                    int suma_acumuladorChocado=acumuladorChocado.get(Integer.parseInt(jugadorAnterior)-1)+1; //Suma la cantidad de chocados generados por el jugador
                    acumuladorChocado.set(Integer.parseInt(jugadorAnterior)-1, suma_acumuladorChocado);
                }

            }
            posicionesAvanzadas.add(sumaDados); 
        }else{
            suma_TotalDados= posicionesAvanzadas.get(Integer.parseInt(jugadorAnterior))+sumaDados;
            //VALIDACIONES GENERALES DEL JUEGO
            if(d1==1 && d2==1){
                lbl_PlayZone.setText("PAR (1,1)");
                int sumaDatos_Limite=posicionesAvanzadas.get(Integer.parseInt(jugadorAnterior))+21;
                if(sumaDatos_Limite<nivelSeleccionado){
                    sumaDados=21;   
                    suma_TotalDados= posicionesAvanzadas.get(Integer.parseInt(jugadorAnterior))+21;
                    JOptionPane.showMessageDialog(null, "Usted JUGADOR "+jugadorAnterior+" sac√≥ par  de unos (1,1) podr√° avanzar\n" +
                    "simult√°neamente Veintiuno (21) posiciones.");   
               }else{
                    JOptionPane.showMessageDialog(null, "Usted JUGADOR "+jugadorAnterior+" sac√≥ par  de unos (1,1) no podr√° avanzar\n" +
                    "simult√°neamente Veintiuno (21) posiciones. Porque excedi√≥ el l√≠mite a la meta :\n ACUMULADO ACTUAL: "+sumaDatos_Limite+" mayor  NIVEL META: "+nivelSeleccionado);     
                }
                acumuladorTotalPares=acumuladorPares.get(Integer.parseInt(jugadorAnterior))+1;
                acumuladorPares.set(Integer.parseInt(jugadorAnterior), acumuladorTotalPares); 
            }else if(d1==d2){
                lbl_PlayZone.setText("PAR ("+d1+","+d2+")");
                acumuladorTotalPares=acumuladorPares.get(Integer.parseInt(jugadorAnterior))+1;
                acumuladorPares.set(Integer.parseInt(jugadorAnterior), acumuladorTotalPares);
                JOptionPane.showMessageDialog(null, "Usted JUGADOR "+jugadorAnterior+" sac√≥ par.");   
            }   
            
            if(acumuladorTotalPares==3){
            //VALIDAMOS LOS PARES 
                lblWinner.setText(jugadorAnterior);
                posicionesAvanzadas.set(Integer.parseInt(jugadorAnterior), suma_TotalDados); 
                JOptionPane.showMessageDialog(null, "USTED JUGADOR "+jugadorAnterior+" HA GANADO. FELICITACIONES... HA ACUMULADO 3 PARES SEGUIDOS.");
                btn_playPlayerNo.setEnabled(false);
                btn_configParams.setEnabled(true);  
                btn_tryAgain.setEnabled(false);
                
            }else if(suma_TotalDados>=nivelSeleccionado){
               //VALIDAMOS SI TOTAL ACUMULADO DE DATOS ES IGUAL AL NIVEL 
                    lblWinner.setText(jugadorAnterior);
                    posicionesAvanzadas.set(Integer.parseInt(jugadorAnterior), suma_TotalDados); 
                    JOptionPane.showMessageDialog(null, "USTED JUGADOR "+jugadorAnterior+" HA GANADO. FELICITACIONES... SUMA TOTAL DE  DADOS ES IGUAL O MAYOR AL NIVEL: "+nivelSeleccionado+"\nSUMA TOTAL: "+suma_TotalDados);
                    btn_playPlayerNo.setEnabled(false);
                    btn_configParams.setEnabled(true);  
                    btn_tryAgain.setEnabled(false);
            }else{
                /*Si un jugador llega a la posici√≥n donde hay otro jugador [choque *], el que estaba
                antes, regresa a salida, es decir inicia nuevamente, y el que lleg√≥, queda esa posici√≥n. */
                if(posicionesAvanzadas.get(Integer.parseInt(jugadorAnterior)-1)==suma_TotalDados){
                    System.out.println("[choque *]");
                    JOptionPane.showMessageDialog(null, "Usted JUGADOR "+jugadorAnterior+" ACUMUL√ì:"+suma_TotalDados+" y ha hecho un [choque *] al JUGADOR "+Jactual+" que ACUMUL√ì: "+posicionesAvanzadas.get(Integer.parseInt(jugadorAnterior)-1));          
                    int suma_DadosChoque=0;
                    posicionesAvanzadas.set(Integer.parseInt(jugadorAnterior)-1, suma_DadosChoque); //Registramos posicion=0
                    int suma_acumuladorChocado=acumuladorChocado.get(Integer.parseInt(jugadorAnterior)-1)+1; //Suma la cantidad de chocados generados por el jugador
                    acumuladorChocado.set(Integer.parseInt(jugadorAnterior)-1, suma_acumuladorChocado); //Registramos                
                }
            
            posicionesAvanzadas.set(Integer.parseInt(jugadorAnterior), suma_TotalDados); 
           
            }
         
        }
        //**********************************************************++
        //MOSTRAR DATOS EN CONSOLA
        System.out.println("JUGADOR TURNO: "+jugadorAnterior);      
        System.out.println("POSICIONES AVANZADAS: "+posicionesAvanzadas);
        //***********************************************************************************
        
        //VISUALIZAR DATOS EN SCORES ZONE
        
        lbl_turnPlayer.setText(jugadorAnterior); //Muestra (Jugador que lanz√≥ los dados)
        lbl_advancedPositions.setText(Integer.toString(posicionesAvanzadas.get(Integer.parseInt(jugadorAnterior)))); // Posiciones que ha avanzado el Jugador que lanz√≥ los dados
        lbl_missingPositions.setText(Integer.toString(nivelSeleccionado-posicionesAvanzadas.get(Integer.parseInt(jugadorAnterior)))); // Posiciones que faltan a Meta  el Jugador que lanz√≥ los dados
        lbl_returns.setText(Integer.toString(acumuladorChocado.get(Integer.parseInt(jugadorAnterior))));
        lblPairs.setText(Integer.toString(acumuladorPares.get(Integer.parseInt(jugadorAnterior))));

        //Validaci√≥n: Cuando el jugador es el ultimo  del turno. Repite nuevamente los turnos.
     if(jugador==Integer.parseInt(numeroJugadores)){
            jugador=0;
        }
    
    }//GEN-LAST:event_btn_playPlayerNoActionPerformed

    private void btn_HelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_HelpActionPerformed
        JOptionPane.showMessageDialog(null,"HELP:\n\n"
                + "[Config params]:\n La cantidad de jugadores que se despliegan en el Combobox, puede ser modificada en"
                + "la interfaz que abrir√° este bot√≥n.\n"
                + "[Try again]: Bot√≥n para reiniciar el juego.\n"
                + "[About of]: Se abre nueva ventana con informaci√≥n del desarrollador.\n"
                + "[Winner]: Se muestra el n√∫mero del GANADOR de la partida.\n\n"
                + "[L√≥gica del juego]:\nAl presionar el bot√≥n Start game, se habilita la zona de juego.Por defecto, inicia el jugador Nro. 1. Para tirar"
                + "los dados\nel jugador debe presionar el bot√≥n Play - Player #.Hecho esto se mostrara los datos en Scores zone"
                + "y asi sucesivamente\ncon los jugadores siguientes.\n\n"
                + "Los datos a mostrar son:\n\n"
                + "1. Turn player (Jugador que lanz√≥ los dados)\n" +
                    "2. Advanced positions (Posiciones que ha avanzado)\n" +
                    "3. Missing positions (Posiciones que faltan a Meta)\n" +
                    "4. Returns (Regresos a salida cuando es chocado)*\n\n"
                + "OBSERVACI√ìN:\n1. Si un jugador llega a la posici√≥n donde hay otro jugador [choque *], el que estaba" +
                    "antes, regresa a salida,\n es decir inicia nuevamente, y el que lleg√≥, queda esa posici√≥n.\n"
                + "2. Si un jugador obtiene par de unos (1, 1) al lanzar los dados, podr√° avanzar" +
                    "simult√°neamente veintiuna (21) posiciones,\n siempre que no exceda el l√≠mite a la meta.\n\n"
                + "GANADOR: \n1. Si un jugador obtiene 3 pares consecutivos, GANA la partida, la cantidad de pares se visualiza en Panel [Pairs].\n"
                + "2. El primer jugador que llegue a la meta es el ganador. Tenga en cuenta que para que un\n" +
                    "jugador gane, debe llegar a la meta con el VALOR exacto de posiciones hacia esta.\n", "Help", JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_btn_HelpActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Number_race.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Number_race.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Number_race.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Number_race.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Number_race().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Help;
    private javax.swing.JButton btn_aboutOf;
    private javax.swing.JButton btn_configParams;
    private javax.swing.JButton btn_playPlayerNo;
    private javax.swing.JButton btn_startGame;
    private javax.swing.JButton btn_tryAgain;
    private javax.swing.JComboBox<String> cmb_Level;
    private javax.swing.JComboBox<String> cmb_numberPlayers;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jpanelPairs;
    private javax.swing.JPanel jpanelPrincipal;
    private javax.swing.JPanel jpanelWinner;
    private javax.swing.JPanel jpanel_configZone;
    private javax.swing.JPanel jpanel_playZone2;
    private javax.swing.JPanel jpanel_scoresZone;
    private javax.swing.JLabel lblD1;
    private javax.swing.JLabel lblD2;
    private javax.swing.JLabel lblPairs;
    private javax.swing.JLabel lblWinner;
    private javax.swing.JTextField lbl_PlayZone;
    private javax.swing.JLabel lbl_advancedPositions;
    private javax.swing.JLabel lbl_missingPositions;
    private javax.swing.JLabel lbl_returns;
    private javax.swing.JLabel lbl_turnPlayer;
    // End of variables declaration//GEN-END:variables
}
